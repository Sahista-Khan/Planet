{"version":3,"sources":["Components/Planet/Planet.js","Components/People/People.js","Components/Residents/Residents.js","App.js","reportWebVitals.js","index.js"],"names":["Planet","props","useState","planet","setplanet","useEffect","axios","get","then","res","console","log","data","results","catch","className","map","value","onClick","history","push","residentsHandler","name","People","people","setpeople","location","state","height","mass","Residents","residents","length","peopleHandler","App","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAKe,SAASA,EAAOC,GAAQ,IAAD,EACNC,mBAAS,MADH,mBAC3BC,EAD2B,KACnBC,EADmB,KAGlCC,qBAAU,WACSC,IAAMC,IAAI,kCACxBC,MAAK,SAACC,GACHC,QAAQC,IAAIF,EAAIG,KAAKC,SACrBT,EAAUK,EAAIG,KAAKC,YAGtBC,OAAM,iBAET,IAEFJ,QAAQC,IAAIV,GAMZ,OACI,gCACI,mBAAGc,UAAU,YAAb,yBACA,6BACKZ,EACGA,EAAOa,KAAI,SAAAC,GAAK,OAAE,oBAAqBC,QAAS,YATzC,SAACD,GACpBhB,EAAMkB,QAAQC,KAAK,aAAaH,GAQiCI,CAAiBJ,IAApD,SAA8DA,EAAMK,MAA3DL,EAAMK,SACjC,gDCHLC,MAxBf,SAAgBtB,GAAQ,IAAD,EACSC,mBAAS,MADlB,mBACZsB,EADY,KACJC,EADI,KAenB,OAZApB,qBAAU,WACNC,IAAMC,IAAIN,EAAMyB,SAASC,OACxBnB,MAAK,SAACC,GACHC,QAAQC,IAAIF,GACZgB,EAAUhB,EAAIG,SAGjBE,OAAM,iBAET,IAKE,gCACI,+CACAU,EAAQ,yCAAYA,EAAOF,KAAnB,eAAqCE,EAAOI,OAA5C,cAA+DJ,EAAOK,QAAa,gDCHxFC,MAnBf,SAAmB7B,GACfS,QAAQC,IAAIV,GAEZ,IAAI8B,EAAW9B,EAAMyB,SAASC,MAAQ1B,EAAMyB,SAASC,MAAMI,UAAW,GAMtE,OACI,gCACI,8CACCA,EAAUC,OAAO,EACdD,EAAUf,KAAI,SAAAP,GAAG,OAAE,oBAAIS,QAAS,YARxB,SAACT,GACjBR,EAAMkB,QAAQC,KAAK,UAAUX,GAOgBwB,CAAcxB,IAAhC,SAAwCA,OAC3D,uD,eCSDyB,MAjBf,WACE,OACE,8BACE,cAAC,IAAD,UAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,UAAUC,UAAWb,IACjC,cAAC,IAAD,CAAOY,KAAK,aAAaC,UAAWN,IACpC,cAAC,IAAD,CAAOK,KAAK,IAAIC,UAAWpC,YCHtBqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/B,MAAK,YAAkD,IAA/CgC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.21aabef3.chunk.js","sourcesContent":["import React,{useState,useEffect} from 'react'\r\n\r\n\r\nimport axios from 'axios'\r\n\r\nexport default function Planet(props) {\r\n    const [planet, setplanet] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        const planet = axios.get(\"https://swapi.dev/api/planets/\")\r\n        .then((res)=>{\r\n            console.log(res.data.results)\r\n            setplanet(res.data.results)\r\n     \r\n        })\r\n        .catch(()=>{})\r\n\r\n    },[])\r\n\r\n    console.log(props)\r\n\r\n    let residentsHandler = (value)=>{\r\n        props.history.push(\"/residents\",value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p className=\"allPlanet\">All Planets</p>\r\n            <ul>\r\n                {planet? \r\n                    planet.map(value=><li key={value.name} onClick={()=>{residentsHandler(value)}}>{value.name}</li>):\r\n                    <p>Loading...</p>}\r\n            </ul>\r\n\r\n         \r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React,{useState,useEffect} from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction People(props) {\r\n    const [people, setpeople] = useState(null)\r\n    \r\n    useEffect(() => {\r\n        axios.get(props.location.state)\r\n        .then((res)=>{\r\n            console.log(res)\r\n            setpeople(res.data)\r\n     \r\n        })\r\n        .catch(()=>{})\r\n\r\n    },[])\r\n\r\n\r\n    return (\r\n     \r\n        <div>\r\n            <p>People Details</p>\r\n           {people? <div>Name: {people.name} -- Height: {people.height} --- Mass: {people.mass}</div> :<p>Loading....</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default People\r\n","import React from 'react'\r\nfunction Residents(props) {\r\n    console.log(props)\r\n\r\n    let residents= props.location.state ? props.location.state.residents :[];\r\n\r\n    let peopleHandler = (res)=>{\r\n        props.history.push(\"/people\",res)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>All Residents</p>\r\n            {residents.length>0 ? \r\n                residents.map(res=><li onClick={()=>{peopleHandler(res)}}>{res}</li>) : \r\n                <p>No Residents Found</p>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Residents\r\n","\nimport './App.css';\nimport Planet from './Components/Planet/Planet';\nimport People from './Components/People/People';\nimport Residents from './Components/Residents/Residents';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <div>\n      <BrowserRouter>\n\n        <Switch>  \n          <Route path=\"/people\" component={People} />\n          <Route path=\"/residents\" component={Residents} />\n          <Route path=\"/\" component={Planet} />\n        </Switch>\n      </BrowserRouter>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}